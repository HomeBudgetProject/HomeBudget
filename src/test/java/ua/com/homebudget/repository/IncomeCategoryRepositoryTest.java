package ua.com.homebudget.repository;import com.github.springtestdbunit.annotation.DatabaseSetup;import org.junit.Assert;import org.junit.Test;import org.springframework.beans.factory.annotation.Autowired;import ua.com.homebudget.DblIntegrationTest;import ua.com.homebudget.model.IncomeCategory;import javax.transaction.Transactional;import java.util.Arrays;import java.util.Collections;import java.util.List;/** * @author Bondar Dmytro. */@Transactional@DatabaseSetup("incomeCategory.xml")public class IncomeCategoryRepositoryTest extends DblIntegrationTest {    @Autowired    IncomeCategoryRepository categoryRepository;    @Test    public void testFindById() throws Exception {        IncomeCategory category = categoryRepository.findOne(1);        Assert.assertNotNull(category);    }    @Test    public void testFindByUnexistingId() throws Exception {        IncomeCategory category = categoryRepository.findOne(185);        Assert.assertNull(category);    }    @Test    public void testFindByParent() throws Exception {        List<IncomeCategory> categories = categoryRepository.findByParentId_CategoryId(1);        Assert.assertEquals(Arrays.asList(categoryRepository.findOne(2)),categories);    }    @Test    public void testFindByUnexistingPatent() throws Exception {        List<IncomeCategory> categories = categoryRepository.findByParentId_CategoryId(2);        Assert.assertEquals(Collections.EMPTY_LIST, categories);    }    @Test    public void testFindByUser() throws Exception {        List<IncomeCategory> categories = categoryRepository.findByUser_UserId(1);        Assert.assertEquals(Arrays.asList(categoryRepository.findOne(1),categoryRepository.findOne(2)), categories);    }    @Test    public void testFindByUnexistingUser() throws Exception {        List<IncomeCategory> categories = categoryRepository.findByUser_UserId(2);        Assert.assertEquals(Collections.EMPTY_LIST, categories);    }}